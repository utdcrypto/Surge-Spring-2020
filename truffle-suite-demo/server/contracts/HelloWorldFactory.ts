/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { HelloWorld } from "./HelloWorld";

export class HelloWorldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<HelloWorld> {
    return super.deploy(overrides) as Promise<HelloWorld>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): HelloWorld {
    return super.attach(address) as HelloWorld;
  }
  connect(signer: Signer): HelloWorldFactory {
    return super.connect(signer) as HelloWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWorld {
    return new Contract(address, _abi, signerOrProvider) as HelloWorld;
  }
}

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "add_name",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string"
      }
    ],
    name: "get_value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string"
      }
    ],
    name: "name_in_map",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610596806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631ff1f33c146100515780636404ef8214610120578063c7cb577f146101fd578063f8a8fd6d146102d0575b600080fd5b61010a6004803603602081101561006757600080fd5b810190808035906020019064010000000081111561008457600080fd5b82018360208201111561009657600080fd5b803590602001918460018302840111640100000000831117156100b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102fa565b6040518082815260200191505060405180910390f35b6101e36004803603604081101561013657600080fd5b810190808035906020019064010000000081111561015357600080fd5b82018360208201111561016557600080fd5b8035906020019184600183028401116401000000008311171561018757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061036c565b604051808215151515815260200191505060405180910390f35b6102b66004803603602081101561021357600080fd5b810190808035906020019064010000000081111561023057600080fd5b82018360208201111561024257600080fd5b8035906020019184600183028401116401000000008311171561026457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104e2565b604051808215151515815260200191505060405180910390f35b6102d8610558565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b600080826040518082805190602001908083835b60208310610331578051825260208201915060208101905060208303925061030e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020549050919050565b600080151561037a846104e2565b1515146103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e616d65206d75737420626520696e20746865206d617000000000000000000081525060200191505060405180910390fd5b600080846040518082805190602001908083835b602083106104265780518252602082019150602081019050602083039250610403565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414156104d757816000846040518082805190602001908083835b602083106104975780518252602082019150602081019050602083039250610474565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902081905550600190506104dc565b600090505b92915050565b6000806000836040518082805190602001908083835b6020831061051b57805182526020820191506020810190506020830392506104f8565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414159050919050565b6000600190509056fea265627a7a72315820885f23b029e338ebc37ce8b6f2c01e1db4bab61ee3f6f70c1036ca6a434a7d9164736f6c63430005100032";
